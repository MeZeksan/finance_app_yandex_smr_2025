import 'dart:async';
import 'package:finance_app_yandex_smr_2025/features/category/data/models/category.dart';
import 'package:finance_app_yandex_smr_2025/features/category/domain/entity/category_entity.dart';
import 'package:finance_app_yandex_smr_2025/features/category/domain/repositories/category_repository.dart';

class MockCategoryRepository implements CategoryRepository {
  static final List<Category> _mockData = [
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
    Category(
      id: 1,
      name: "–ó–∞—Ä–ø–ª–∞—Ç–∞",
      emoji: "üí∞",
      isIncome: true,
    ),
    Category(
      id: 2,
      name: "–§—Ä–∏–ª–∞–Ω—Å",
      emoji: "üíª",
      isIncome: true,
    ),
    Category(
      id: 3,
      name: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
      emoji: "üìà",
      isIncome: true,
    ),
    Category(
      id: 4,
      name: "–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞",
      emoji: "üíº",
      isIncome: true,
    ),
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
    Category(
      id: 5,
      name: "–ö–æ–º–∏–∫—Å-—à–æ–ø",
      emoji: "üìö",
      isIncome: false,
    ),
    Category(
      id: 6,
      name: "–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω",
      emoji: "üêæ",
      isIncome: false,
    ),
    Category(
      id: 7,
      name: "–ö–æ—Ñ–µ–π–Ω—è",
      emoji: "‚òï",
      isIncome: false,
    ),
    Category(
      id: 8,
      name: "–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä",
      emoji: "üé¨",
      isIncome: false,
    ),
    Category(
      id: 9,
      name: "–ö–Ω–∏–∂–Ω—ã–π",
      emoji: "üìñ",
      isIncome: false,
    ),
    Category(
      id: 10,
      name: "–ò–≥—Ä–æ–≤–æ–π –º–∞–≥–∞–∑–∏–Ω",
      emoji: "üéÆ",
      isIncome: false,
    ),
    Category(
      id: 11,
      name: "–ü–∏—Ü—Ü–µ—Ä–∏—è",
      emoji: "üçï",
      isIncome: false,
    ),
    Category(
      id: 12,
      name: "–°—É—à–∏-–±–∞—Ä",
      emoji: "üç±",
      isIncome: false,
    ),
    Category(
      id: 13,
      name: "–°–ø–æ—Ä—Ç–∑–∞–ª",
      emoji: "üèãÔ∏è",
      isIncome: false,
    ),
    Category(
      id: 14,
      name: "–ú–∞–≥–∞–∑–∏–Ω –º—É–∑—ã–∫–∏",
      emoji: "üéµ",
      isIncome: false,
    ),
  ];

  @override
  Future<List<CategoryEntity>> getAllCategories() async {
    return _mockData.map((model) => model.toEntity()).toList();
  }

  @override
  Future<List<CategoryEntity>> getIncomeCategories() async {
    return _mockData
        .where((model) => model.isIncome)
        .map((model) => model.toEntity())
        .toList();
  }

  @override
  Future<List<CategoryEntity>> getExpenseCategories() async {
    return _mockData
        .where((model) => !model.isIncome)
        .map((model) => model.toEntity())
        .toList();
  }
}
